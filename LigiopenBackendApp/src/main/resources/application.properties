spring.application.name=ligiopen

spring.datasource.url=jdbc:postgresql://${DB_ADDRESS}:5432/${DB_NAME}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update

server.port=${SERVER_PORT}

# AWS Configuration
cloud.aws.credentials.accessKey=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secretKey=${AWS_SECRET_ACCESS_KEY}
cloud.aws.s3.region=${S3_REGION}
cloud.aws.s3.endpoint=${S3_ENDPOINT}
cloud.aws.s3.bucket=${S3_BUCKET_NAME}

# File upload settings
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Flyway
spring.flyway.enabled=false
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile

# Explicit provider configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration-ms=${JWT_EXPIRATION_MS}

# Session management for OAuth2
server.servlet.session.cookie.name=JSESSIONID
server.servlet.session.cookie.secure=false 
server.servlet.session.cookie.same-site=lax
server.servlet.session.timeout=30m
server.servlet.session.cookie.max-age=1800

# DEBUG LOGGING - Add these for troubleshooting
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.springframework.http.client=DEBUG
logging.level.org.springframework.security.oauth2.client.endpoint=TRACE
logging.level.org.springframework.security.oauth2.client.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2.client.oidc=DEBUG

logging.level.root=WARN
logging.level.com.fanaka.konnekt.checkout_service=INFO
logging.level.org.springframework.web=DEBUG
logging.file.name=ligiopen.log

# Show full request/response bodies
logging.level.org.apache.http.wire=DEBUG
logging.level.org.apache.http.headers=DEBUG


# Test workflow - #1
# Test workflow - #2
# Test workflow - #3
# Test workflow - #4
# Test workflow - #5
# Test workflow - #7
# Test workflow - #8
# Test workflow - #9
# Test workflow - #10
# Test workflow - #11
# Test workflow - #12
